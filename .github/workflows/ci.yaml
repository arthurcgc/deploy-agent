name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: '1.19'

    - uses: actions/checkout@v2

    # NOTE: using link-local reserved address block in order to avoid conflict.
    - name: Add fake IP (169.196.255.254) on loopback interface
      run: |-
        { ip address | grep -q 169.196.255.254; } || sudo ip address add 169.196.255.254 dev lo

    - name: Running required services (Builkit, Docker Registry, Docker)
      run: docker-compose -f ./compose.yaml up -d

    - name: Install protoc and Go compiler plugins
      run: |-
        sudo apt install -y protobuf-compiler
        go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

    - run: make test test/integration

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: '1.19'
    - uses: actions/checkout@v2
    - uses: golangci/golangci-lint-action@v3

  publish:
    if: github.repository == 'tsuru/deploy-agent' && github.event_name != 'pull_request'
    needs:
    - lint
    - test
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: docker login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - uses: actions/checkout@v2

    - name: push "latest" image tag to Docker Hub (tsuru/deploy-agent)
      if: contains(github.ref, 'refs/heads/main')
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: tsuru/deploy-agent:latest
        platforms: linux/amd64,linux/arm64

  release:
    if: github.event_name != 'pull_request' && github.repository == 'tsuru/deploy-agent' && startsWith(github.ref, 'refs/tags/')
    needs:
    - lint
    - test
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: docker login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - uses: actions/setup-go@v3
      with:
        go-version: '1.19'

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: goreleaser/goreleaser-action@v2
      with:
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
